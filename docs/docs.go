// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ratings": {
            "post": {
                "description": "create a rating",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ratings"
                ],
                "summary": "Create a rating",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "RestaurantID header",
                        "name": "RestaurantID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create rating",
                        "name": "rating",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createRatingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ratingResponse"
                            }
                        }
                    }
                }
            }
        },
        "/restaurants": {
            "get": {
                "description": "list restaurants",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "restaurants"
                ],
                "summary": "List restaurants",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.restaurantResponse"
                            }
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Login user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login user",
                        "name": "register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.loginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.loggedInUserResponse"
                            }
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "register a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register a user",
                "parameters": [
                    {
                        "description": "Register user",
                        "name": "register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.registerUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.userResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.createRatingRequest": {
            "type": "object",
            "required": [
                "description",
                "dishID"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 3
                },
                "dishID": {
                    "type": "string"
                }
            }
        },
        "api.loggedInUserResponse": {
            "type": "object",
            "required": [
                "emailAddress",
                "id",
                "name",
                "token"
            ],
            "properties": {
                "emailAddress": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "api.loginUserRequest": {
            "type": "object",
            "required": [
                "emailAddress",
                "password"
            ],
            "properties": {
                "emailAddress": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "api.ratingResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "dishID": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "restaurantID": {
                    "type": "string"
                },
                "sentiment": {
                    "type": "string"
                }
            }
        },
        "api.registerUserRequest": {
            "type": "object",
            "required": [
                "emailAddress",
                "name",
                "password"
            ],
            "properties": {
                "emailAddress": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "api.restaurantResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.userResponse": {
            "type": "object",
            "required": [
                "emailAddress",
                "id",
                "name"
            ],
            "properties": {
                "emailAddress": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
