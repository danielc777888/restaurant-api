definitions:
  api.createDishRequest:
    properties:
      description:
        maxLength: 200
        minLength: 3
        type: string
      name:
        maxLength: 20
        minLength: 3
        type: string
      price:
        type: integer
      restaurantID:
        type: string
    required:
    - description
    - name
    - price
    - restaurantID
    type: object
  api.createRatingRequest:
    properties:
      description:
        maxLength: 200
        minLength: 3
        type: string
      dishID:
        type: string
    required:
    - description
    - dishID
    type: object
  api.dishResponse:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: integer
      restaurantID:
        type: string
    type: object
  api.loggedInUserResponse:
    properties:
      emailAddress:
        type: string
      id:
        type: string
      name:
        type: string
      token:
        type: string
    required:
    - emailAddress
    - id
    - name
    - token
    type: object
  api.loginUserRequest:
    properties:
      emailAddress:
        type: string
      password:
        type: string
    required:
    - emailAddress
    - password
    type: object
  api.ratingResponse:
    properties:
      description:
        type: string
      dishID:
        type: string
      id:
        type: string
      restaurantID:
        type: string
      sentiment:
        type: string
    type: object
  api.registerUserRequest:
    properties:
      emailAddress:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - emailAddress
    - name
    - password
    type: object
  api.restaurantResponse:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  api.updateDishRequest:
    properties:
      description:
        type: string
      id:
        maxLength: 20
        minLength: 3
        type: string
      name:
        maxLength: 200
        minLength: 3
        type: string
      price:
        type: integer
      restaurantID:
        type: string
    required:
    - description
    - id
    - name
    - price
    - restaurantID
    type: object
  api.userResponse:
    properties:
      emailAddress:
        type: string
      id:
        type: string
      name:
        type: string
    required:
    - emailAddress
    - id
    - name
    type: object
info:
  contact: {}
paths:
  /dishes:
    delete:
      consumes:
      - application/json
      description: delete a dish
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: RestaurantID header
        in: header
        name: RestaurantID
        required: true
        type: string
      - description: Dish ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a dish
      tags:
      - dishes
    get:
      consumes:
      - application/json
      description: list dishes
      parameters:
      - description: RestaurantID header
        in: header
        name: RestaurantID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.dishResponse'
            type: array
      summary: List dishes
      tags:
      - dishes
    patch:
      consumes:
      - application/json
      description: updated a dish
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: RestaurantID header
        in: header
        name: RestaurantID
        required: true
        type: string
      - description: Update dish
        in: body
        name: dish
        required: true
        schema:
          $ref: '#/definitions/api.updateDishRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.dishResponse'
      summary: Update a dish
      tags:
      - dishes
    post:
      consumes:
      - application/json
      description: create a dish
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: RestaurantID header
        in: header
        name: RestaurantID
        required: true
        type: string
      - description: Create dish
        in: body
        name: dish
        required: true
        schema:
          $ref: '#/definitions/api.createDishRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.dishResponse'
      summary: Create a dish
      tags:
      - dishes
  /dishes/:id:
    get:
      consumes:
      - application/json
      description: get a dish
      parameters:
      - description: RestaurantID header
        in: header
        name: RestaurantID
        required: true
        type: string
      - description: Dish ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.dishResponse'
      summary: Get a dish
      tags:
      - dishes
  /ratings:
    post:
      consumes:
      - application/json
      description: create a rating
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      - description: RestaurantID header
        in: header
        name: RestaurantID
        required: true
        type: string
      - description: Create rating
        in: body
        name: rating
        required: true
        schema:
          $ref: '#/definitions/api.createRatingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ratingResponse'
      summary: Create a rating
      tags:
      - ratings
  /restaurants:
    get:
      consumes:
      - application/json
      description: list restaurants
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.restaurantResponse'
            type: array
      summary: List restaurants
      tags:
      - restaurants
  /users/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: Login user
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/api.loginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.loggedInUserResponse'
            type: array
      summary: Login user
      tags:
      - users
  /users/register:
    post:
      consumes:
      - application/json
      description: register a user
      parameters:
      - description: Register user
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/api.registerUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.userResponse'
            type: array
      summary: Register a user
      tags:
      - users
swagger: "2.0"
